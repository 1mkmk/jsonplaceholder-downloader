#!/bin/bash
# Health check script for {{ app_name }}
# Generated by Ansible on {{ ansible_date_time.date }}

# Configuration
APP_NAME="{{ app_name }}"
APP_PORT="{{ app_port }}"
HEALTH_CHECK_URL="http://localhost:${APP_PORT}{{ app_health_check_path }}"
LOG_DIR="{{ app_log_dir }}"
METRICS_DIR="{{ app_dir }}/metrics"

# Timestamp
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Check if service is running
if systemctl is-active --quiet {{ app_name }}; then
    SERVICE_STATUS="running"
else
    SERVICE_STATUS="stopped"
    echo "[${TIMESTAMP}] ERROR: Service ${APP_NAME} is not running" | tee -a "${LOG_DIR}/health_check.log"
    
    # Update metrics
    echo "${TIMESTAMP} status=failed service_running=0" > "${METRICS_DIR}/health_status.txt"
    
    # Attempt to restart if configured
    {% if auto_restart_on_failure | default(true) %}
    echo "[${TIMESTAMP}] Attempting to restart service" | tee -a "${LOG_DIR}/health_check.log"
    systemctl restart {{ app_name }}
    {% endif %}
    
    exit 1
fi

# Check API health
HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${HEALTH_CHECK_URL})

if [ "$HTTP_STATUS" -eq 200 ]; then
    echo "[${TIMESTAMP}] Health check passed: HTTP ${HTTP_STATUS}" >> "${LOG_DIR}/health_check.log"
    echo "${TIMESTAMP} status=ok service_running=1 http_status=${HTTP_STATUS}" > "${METRICS_DIR}/health_status.txt"
    exit 0
else
    echo "[${TIMESTAMP}] ERROR: Health check failed: HTTP ${HTTP_STATUS}" | tee -a "${LOG_DIR}/health_check.log"
    echo "${TIMESTAMP} status=failed service_running=1 http_status=${HTTP_STATUS}" > "${METRICS_DIR}/health_status.txt"
    
    # Attempt to restart if configured
    {% if auto_restart_on_failure | default(true) %}
    echo "[${TIMESTAMP}] Attempting to restart service" | tee -a "${LOG_DIR}/health_check.log"
    systemctl restart {{ app_name }}
    {% endif %}
    
    exit 1
fi