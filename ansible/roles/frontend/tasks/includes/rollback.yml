---
# Frontend rollback tasks

- name: Find frontend backups
  ansible.builtin.find:
    paths: "{{ frontend_dir }}/backups"
    patterns: "frontend_backup_*.tar.gz"
    file_type: file
  register: frontend_backups
  tags: [frontend, rollback]

- name: Check if any backups exist
  ansible.builtin.assert:
    that: frontend_backups.matched > 0
    fail_msg: "No frontend backups found for rollback"
    success_msg: "Found {{ frontend_backups.matched }} frontend backups"
  tags: [frontend, rollback]
  
- name: Get latest backup
  ansible.builtin.set_fact:
    latest_backup: "{{ (frontend_backups.files | sort(attribute='mtime', reverse=true) | first).path }}"
  when: frontend_backups.matched > 0
  tags: [frontend, rollback]

- name: Display rollback information
  ansible.builtin.debug:
    msg: "Rolling back frontend to backup file: {{ latest_backup | basename }}"
  when: latest_backup is defined
  tags: [frontend, rollback]

- name: Create temporary rollback directory
  ansible.builtin.file:
    path: "{{ frontend_dir }}/rollback_tmp"
    state: directory
    owner: "{{ frontend_user }}"
    group: "{{ frontend_group }}"
    mode: '0755'
  tags: [frontend, rollback]

- name: Extract backup files
  ansible.builtin.unarchive:
    src: "{{ latest_backup }}"
    dest: "{{ frontend_dir }}/rollback_tmp"
    remote_src: yes
  when: latest_backup is defined
  tags: [frontend, rollback]

- name: Check if dist directory exists in backup
  ansible.builtin.stat:
    path: "{{ frontend_dir }}/rollback_tmp/dist"
  register: dist_in_backup
  tags: [frontend, rollback]

- name: Backup current frontend dist (before rollback)
  ansible.builtin.shell: |
    cd {{ frontend_dir }} && \
    rm -rf rollback_previous 2>/dev/null || true && \
    mv dist rollback_previous 2>/dev/null || true
  args:
    warn: false
  changed_when: true
  failed_when: false
  tags: [frontend, rollback]

- name: Move rollback files to production
  ansible.builtin.shell: |
    cd {{ frontend_dir }} && \
    mv rollback_tmp/dist dist
  args:
    warn: false
  when: dist_in_backup.stat.exists
  changed_when: true
  tags: [frontend, rollback]

- name: Set correct permissions for restored files
  ansible.builtin.file:
    path: "{{ frontend_dir }}/dist"
    state: directory
    owner: "{{ frontend_user }}"
    group: "{{ frontend_group }}"
    mode: '0755'
    recurse: yes
  tags: [frontend, rollback]

- name: Clean up temporary rollback directory
  ansible.builtin.file:
    path: "{{ frontend_dir }}/rollback_tmp"
    state: absent
  tags: [frontend, rollback]

- name: Restart web server after rollback (Nginx)
  ansible.builtin.systemd:
    name: nginx
    state: restarted
  when: web_server == "nginx"
  tags: [frontend, rollback]

- name: Restart web server after rollback (Apache)
  ansible.builtin.systemd:
    name: apache2
    state: restarted
  when: web_server == "apache2"
  tags: [frontend, rollback]

- name: Restart standalone server after rollback
  ansible.builtin.systemd:
    name: "{{ frontend_name }}"
    state: restarted
  when: web_server == "none"
  tags: [frontend, rollback]