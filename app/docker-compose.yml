version: '3.8'

services:
  # Kotlin backend service
  backend:
    image: gradle:7.4.2-jdk17
    tty: true
    stdin_open: true
    working_dir: /app
    environment:
      - APP_ENV=dev
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
      - gradle-cache:/root/.gradle
    command: >
      bash -c "cd /app &&
      gradle build -x test &&
      java -Dapp.env=dev -Dapp.mode=api -jar build/libs/jsonplaceholder-downloader-1.0-SNAPSHOT.jar"
    networks:
      - app-network

  # Old React frontend service
  frontend:
    image: node:18-alpine
    tty: true
    stdin_open: true
    working_dir: /app
    environment:
      - VITE_APP_ENV=development
      - VITE_API_BASE_URL=http://localhost:8080/api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    command: >
      sh -c "cd /app &&
      npm install &&
      npm run dev -- --port 5173 --host 0.0.0.0 --no-open ||
      (>&2 echo 'Frontend failed to start... keeping container alive for debugging' && sleep infinity)"
    networks:
      - app-network

  # New improved React frontend service
  frontend-react:
    image: node:18-slim
    tty: true
    stdin_open: true
    working_dir: /app
    environment:
      - VITE_APP_ENV=development
      - VITE_API_BASE_URL=http://localhost:8080/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-react:/app
    command: >
      sh -c "cd /app &&
      rm -rf node_modules package-lock.json &&
      npm install &&
      npm run dev -- --port 3000 --host 0.0.0.0 --no-open ||
      (>&2 echo 'Frontend failed to start... keeping container alive for debugging' && sleep infinity)"
    networks:
      - app-network
    depends_on:
      - backend

volumes:
  gradle-cache:

networks:
  app-network:
    driver: bridge 